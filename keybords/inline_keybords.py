from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from emoji import emojize
import datetime
from aiogram.dispatcher.filters.state import State
from bot import state_machine


# –≤—ã–±–æ—Ä –ø–æ–ª–∞
def get_gender_kb() -> InlineKeyboardMarkup:
    inline_kb_gender = InlineKeyboardMarkup(row_width=2)
    inline_kb_gender.add(InlineKeyboardButton(text='–ú', callback_data='–ú'), InlineKeyboardButton(text='–ñ', callback_data='–ñ'))
    return inline_kb_gender

    
# –≤–∏–¥ —Ä–∏–µ–ª—Ç–æ—Ä–∞
def get_realtors_type_kb() -> InlineKeyboardMarkup:
    inline_kb_realtors_type = InlineKeyboardMarkup(row_width=1)
    inline_kb_realtors_type.add(InlineKeyboardButton(text='–†–∏–µ–ª—Ç–æ—Ä –∂–∏–ª–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏', callback_data='residential'), InlineKeyboardButton(text='–†–∏–µ–ª—Ç–æ—Ä –∫–æ–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏', callback_data='commercial'))
    return inline_kb_realtors_type


# –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
def get_inline_menu_markup() -> InlineKeyboardMarkup:
    buttons = [
        InlineKeyboardButton(emojize(":bar_chart: –ê–Ω–∞–ª–∏—Ç–∏–∫–∞"), callback_data="analytics"),
        InlineKeyboardButton(emojize(":handshake: –í—Å—Ç—Ä–µ—á–∞"), callback_data="meeting"),
        InlineKeyboardButton(emojize(":telephone_receiver: –û–±–∑–≤–æ–Ω"), callback_data="call"),
        InlineKeyboardButton(emojize(":house: –ü–æ–∫–∞–∑"), callback_data="show"),
        InlineKeyboardButton(emojize("üîç–ü–æ–∏—Å–∫"), callback_data="search"),
        InlineKeyboardButton(emojize(":newspaper: –†–∞—Å–∫–ª–µ–π–∫–∞"), callback_data="flyer"),
        InlineKeyboardButton(emojize("üìà–°–¥–µ–ª–∫–∞"), callback_data="deal"),
        InlineKeyboardButton(emojize(":money_bag: –ó–∞–¥–∞—Ç–æ–∫"), callback_data="deposit"),
        InlineKeyboardButton(emojize("üìö–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π"), callback_data="d_base"),
        InlineKeyboardButton(emojize("ü•¥–ù–µ –º–æ–≥—É —Ä–∞–±–æ—Ç–∞—Ç—å"), callback_data="no_work")
    ]

    inline_markup = InlineKeyboardMarkup()
    
    for i in range(0, 8, 2): # –¥–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–µ 4 —Å—Ç—Ä–æ–∫–∏ –ø–æ 2 –∫–Ω–æ–ø–∫–µ –≤ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ
        inline_markup.add(buttons[i], buttons[i+1])

    for i in range(8, 10): # –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 —Å—Ç—Ä–æ–∫–∏ –ø–æ 1 –∫–Ω–æ–ø–∫–µ –≤ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ
        inline_markup.add(buttons[i])

    return inline_markup


# –ø–æ—á–µ–º—É –ø–ª–æ—Ö–æ
def get_bed_result(from_state: State) -> InlineKeyboardButton:
    buttons = []
    if from_state == state_machine.WorkStates.deal_retult: # —Å–¥–µ–ª–∫–∞
        buttons.append(InlineKeyboardButton(text="–°–¥–µ–ª–∫—É –ø–µ—Ä–µ–Ω–µ—Å–ª–∏", callback_data="–°–¥–µ–ª–∫—É –ø–µ—Ä–µ–Ω–µ—Å–ª–∏"))
        buttons.append(InlineKeyboardButton(text="–ö–ª–∏–µ–Ω—Ç –ø–µ—Ä–µ–¥—É–º–∞–ª", callback_data="–ö–ª–∏–µ–Ω—Ç –ø–µ—Ä–µ–¥—É–º–∞–ª"))

    elif from_state == state_machine.WorkStates.show_result: # –ø–æ–∫–∞–∑
        buttons.append(InlineKeyboardButton("–ü–æ–∫—É–ø–∞—Ç–µ–ª—å –ø—Ä–∏–≤–µ—Ä–µ–¥–ª–∏–≤—ã–π", callback_data="–ü–æ–∫—É–ø–∞—Ç–µ–ª—å –ø—Ä–∏–≤–µ—Ä–µ–¥–ª–∏–≤—ã–π"))
        buttons.append(InlineKeyboardButton("–í—Å—Ç—Ä–µ—á–∞ –Ω–µ —Å–æ—Å—Ç–æ—è–ª–∞—Å—å", callback_data="–í—Å—Ç—Ä–µ—á–∞ –Ω–µ —Å–æ—Å—Ç–æ—è–ª–∞—Å—å"))
        buttons.append(InlineKeyboardButton("–û–±—ä–µ–∫—Ç –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è", callback_data="–û–±—ä–µ–∫—Ç –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è"))

    elif from_state == state_machine.WorkStates.deposit_result: # –∑–∞–¥–∞—Ç–æ–∫
        buttons.append(InlineKeyboardButton("–ó–∞–¥–∞—Ç–æ–∫ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω", callback_data="–ó–∞–¥–∞—Ç–æ–∫ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω"))
        buttons.append(InlineKeyboardButton("–ó–∞–¥–∞—Ç–æ–∫ —Å–æ—Ä–≤–∞–ª—Å—è", callback_data="–ó–∞–¥–∞—Ç–æ–∫ —Å–æ—Ä–≤–∞–ª—Å—è"))

    elif from_state == state_machine.WorkStates.meet_new_object_result: # –≤—Å—Ç—Ä–µ—á–∞
        buttons.append(InlineKeyboardButton("–ü—Ä–æ–¥–∞–≤–µ—Ü –ø—Ä–∏–≤–µ—Ä–µ–¥–ª–∏–≤—ã–π", callback_data="–ü—Ä–æ–¥–∞–≤–µ—Ü –ø—Ä–∏–≤–µ—Ä–µ–¥–ª–∏–≤—ã–π"))
        buttons.append(InlineKeyboardButton("–û–±—ä–µ–∫—Ç –ø–ª–æ—Ö–æ–π", callback_data="–û–±—ä–µ–∫—Ç –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è"))

    elif from_state == state_machine.WorkStates.analytics_result or from_state == state_machine.WorkStates.search_result: # –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –ø–æ–∏—Å–∫
        buttons.append(InlineKeyboardButton("–ü–æ—á–∏—Ç–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ —Ç–µ–º–µ", callback_data="get_materials_analytics"))
    
    buttons.append(InlineKeyboardButton("–î—Ä—É–≥–æ–µ", callback_data="other"))

    inline_markup = InlineKeyboardMarkup(row_width=1)
    inline_markup.add(*buttons)

    return inline_markup


# –∫–Ω–æ–ø–∫–∞-—Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ
def get_video_link(link: str) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup(row_width=1)
    vb = InlineKeyboardButton(text='–°–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª üìñ', url=link)
    kb.add(vb)

    return kb


# –∫–Ω–æ–ø–∫–∞-—Å—Ç–∞—Ä—Ç
def get_start_button() -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup(row_width=1)
    vb = InlineKeyboardButton(text="–°—Ç–∞—Ä—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏", callback_data="–°—Ç–∞—Ä—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
    kb.add(vb)

    return kb


# –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –¥–æ–≥–æ–≤–æ—Ä
def get_is_signed_markup() -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup(row_width=1)
    vb1 = InlineKeyboardButton(text="–ü–æ–¥–ø–∏—Å–∞–ª–∏ –¥–æ–≥–æ–≤–æ—Ä", callback_data="signed")
    vb2 = InlineKeyboardButton(text="–î–æ–≥–æ–≤–æ—Ä –ù–ï –ø–æ–¥–ø–∏—Å–∞–Ω", callback_data="unsigned")
    kb.add(vb1)
    kb.add(vb2)

    return kb


# –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π - –∫–æ—Ä–µ–Ω—å
def get_knowledge_base_root_markup() -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup(row_width=1)
    b = [
        InlineKeyboardButton(text="–ê–Ω–∞–ª–∏—Ç–∏–∫–∞", callback_data="analytics"),
        InlineKeyboardButton(text="–•–æ–ª–æ–¥–Ω—ã–π –∑–≤–æ–Ω–æ–∫", callback_data="calls"),
        InlineKeyboardButton(text="–í–æ–∑—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤", callback_data="bad_clients"),
        InlineKeyboardButton(text="–í—Å—Ç—Ä–µ—á–∞", callback_data="meets"),
        InlineKeyboardButton(text="–ü–æ–∫–∞–∑", callback_data="shows"),
        InlineKeyboardButton(text="–î–æ–≥–æ–≤–æ—Ä—ã", callback_data="deals"),
        InlineKeyboardButton(text="–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å", callback_data="commercial")
    ]
    for i in b:
        kb.add(i)
    return kb
    

# –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π - —Ä–∞–∑–¥–µ–ª –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤
def get_knowledge_base_bad_clients_markup() -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup(row_width=1)
    b = [
        InlineKeyboardButton(text="–ö–æ–Ω—Ç–µ–∫—Å—Ç", callback_data="context"),
        InlineKeyboardButton(text="–û–±—â–µ–µ –ø—Ä–∞–≤–∏–ª–æ –±–æ—Ä—å–±—ã —Å –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è–º–∏", callback_data="general"),
        InlineKeyboardButton(text="–í–æ–∑—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–≤–æ–Ω–∫–µ", callback_data="bad_calls"),
        InlineKeyboardButton(text="–û—Ç—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏–π", callback_data="anti_bad"),
        InlineKeyboardButton(text="–í–æ–∑—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ", callback_data="bad_meets")
    ]
    for i in b:
        kb.add(i)
    return kb
    
    
# –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π - —Ä–∞–∑–¥–µ–ª –≤—Å—Ç—Ä–µ—á–∏
def get_knowledge_base_bad_meets_markup() -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup(row_width=1)
    b = [
        InlineKeyboardButton(text="–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è SMALL-TALK", callback_data="small-talk"),
        InlineKeyboardButton(text="–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è –°–ü–ò–ù", callback_data="spin"),
        InlineKeyboardButton(text="–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è '3 –î–ê'", callback_data="3yes"),
        InlineKeyboardButton(text="–í—Å–µ –º–æ–∂–Ω–æ –ø—Ä–æ–¥–∞—Ç—å", callback_data="all_able")
    ]
    for i in b:
        kb.add(i)
    return kb


# –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π - —Ä–∞–∑–¥–µ–ª –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–¥–∞—Ç—å
def get_knowledge_base_all_able_markup() -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup(row_width=1)
    b = [
        InlineKeyboardButton(text="–¶–µ–Ω–∞", callback_data="price"),
        InlineKeyboardButton(text="–•–æ—É–º—Å—Ç–µ–π–¥–∂–∏–Ω–≥", callback_data="homestaging")
    ]
    for i in b:
        kb.add(i)
    return kb


# –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π - —Ä–∞–∑–¥–µ–ª –¥–æ–≥–æ–≤–æ—Ä—ã
def get_knowledge_base_deals_markup() -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup(row_width=1)
    b = [
        InlineKeyboardButton(text="–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π", callback_data="exclusive"),
        InlineKeyboardButton(text="–ü–æ–∏—Å–∫–æ–≤–æ–π", callback_data="serching"),
        InlineKeyboardButton(text="–ê—É–∫—Ü–∏–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥", callback_data="auction")
    ]
    for i in b:
        kb.add(i)
    return kb